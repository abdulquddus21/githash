"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/upload";
exports.ids = ["pages/api/upload"];
exports.modules = {

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "form-data":
/*!****************************!*\
  !*** external "form-data" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("form-data");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "formidable":
/*!*****************************!*\
  !*** external "formidable" ***!
  \*****************************/
/***/ ((module) => {

module.exports = import("formidable");;

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("fs/promises");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\upload.js */ \"(api)/./pages/api/upload.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/upload\",\n        pathname: \"/api/upload\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnVwbG9hZCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDdXBsb2FkLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ29EO0FBQ3BEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxpREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsaURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJpdmF0ZS8/YjNmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXNcXFxcYXBpXFxcXHVwbG9hZC5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3VwbG9hZFwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3VwbG9hZFwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/upload.js":
/*!*****************************!*\
  !*** ./pages/api/upload.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var formidable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! formidable */ \"formidable\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var form_data__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! form-data */ \"form-data\");\n/* harmony import */ var form_data__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(form_data__WEBPACK_IMPORTED_MODULE_9__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([formidable__WEBPACK_IMPORTED_MODULE_1__, axios__WEBPACK_IMPORTED_MODULE_8__]);\n([formidable__WEBPACK_IMPORTED_MODULE_1__, axios__WEBPACK_IMPORTED_MODULE_8__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\nconst execAsync = (0,util__WEBPACK_IMPORTED_MODULE_7__.promisify)(child_process__WEBPACK_IMPORTED_MODULE_6__.exec);\n// Supabase sozlamalari\nconst SUPABASE_URL = \"https://xzbwfoacsnrmgjmildcr.supabase.co\";\nconst SUPABASE_ANON_KEY = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh6Yndmb2Fjc25ybWdqbWlsZGNyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTgxOTkxNzUsImV4cCI6MjA3Mzc3NTE3NX0.c10rEbuzQIkVvuJEecEltokgaj6AqjyP5IoFVffjizc\";\n// Catbox.moe sozlamalari - fayl ichida saqlangan\nconst CATBOX_USER_HASH = \"f5b7fa9dcde44f181587045cf\";\nconst CATBOX_API_URL = \"https://catbox.moe/user/api.php\";\n// Video formatlarini aniqlash\nconst VIDEO_FORMATS = [\n    \"video/mp4\",\n    \"video/avi\",\n    \"video/mov\",\n    \"video/wmv\",\n    \"video/flv\",\n    \"video/webm\",\n    \"video/mkv\",\n    \"video/3gp\",\n    \"video/m4v\",\n    \"video/quicktime\"\n];\n// Video kompressiya sozlamalari\nconst VIDEO_COMPRESSION_SETTINGS = {\n    resolution: \"720x480\",\n    videoBitrate: \"800k\",\n    audioBitrate: \"128k\",\n    fps: 30,\n    codec: \"libx264\",\n    audioCodec: \"aac\",\n    preset: \"fast\",\n    crf: 28\n};\n// FFmpeg mavjudligini tekshirish\nasync function checkFFmpegAvailability() {\n    try {\n        const { stdout } = await execAsync(\"ffmpeg -version\");\n        if (stdout.includes(\"ffmpeg version\")) {\n            console.log(\"✅ FFmpeg mavjud\");\n            return true;\n        }\n    } catch (error) {\n        console.log(\"❌ FFmpeg topilmadi, video kompressiya o'chiriladi\");\n        return false;\n    }\n    return false;\n}\n// Video faylni siqish\nasync function compressVideo(inputPath, outputPath, mimeType) {\n    try {\n        console.log(\"\\uD83C\\uDFAC Video kompressiya boshlanmoqda...\");\n        console.log(\"\\uD83D\\uDCE5 Input:\", inputPath);\n        console.log(\"\\uD83D\\uDCE4 Output:\", outputPath);\n        const ffmpegCommand = [\n            \"ffmpeg\",\n            \"-i\",\n            `\"${inputPath}\"`,\n            \"-c:v\",\n            VIDEO_COMPRESSION_SETTINGS.codec,\n            \"-c:a\",\n            VIDEO_COMPRESSION_SETTINGS.audioCodec,\n            \"-b:v\",\n            VIDEO_COMPRESSION_SETTINGS.videoBitrate,\n            \"-b:a\",\n            VIDEO_COMPRESSION_SETTINGS.audioBitrate,\n            \"-r\",\n            VIDEO_COMPRESSION_SETTINGS.fps,\n            \"-crf\",\n            VIDEO_COMPRESSION_SETTINGS.crf,\n            \"-preset\",\n            VIDEO_COMPRESSION_SETTINGS.preset,\n            \"-vf\",\n            `scale=${VIDEO_COMPRESSION_SETTINGS.resolution}:force_original_aspect_ratio=decrease,pad=${VIDEO_COMPRESSION_SETTINGS.resolution}:(ow-iw)/2:(oh-ih)/2`,\n            \"-movflags\",\n            \"+faststart\",\n            \"-y\",\n            `\"${outputPath}\"`\n        ].join(\" \");\n        const startTime = Date.now();\n        const { stdout, stderr } = await execAsync(ffmpegCommand, {\n            timeout: 300000,\n            maxBuffer: 1024 * 1024 * 10\n        });\n        const endTime = Date.now();\n        const duration = ((endTime - startTime) / 1000).toFixed(2);\n        if ((0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(outputPath)) {\n            const originalStats = await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().stat(inputPath);\n            const compressedStats = await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().stat(outputPath);\n            const originalSize = originalStats.size;\n            const compressedSize = compressedStats.size;\n            const compressionRatio = ((originalSize - compressedSize) / originalSize * 100).toFixed(2);\n            console.log(\"✅ Video kompressiya tugadi\");\n            console.log(`📊 Asl hajm: ${(originalSize / 1024 / 1024).toFixed(2)}MB`);\n            console.log(`📊 Yangi hajm: ${(compressedSize / 1024 / 1024).toFixed(2)}MB`);\n            console.log(`📊 Tejash: ${compressionRatio}%`);\n            console.log(`⏱️ Vaqt: ${duration}s`);\n            return {\n                success: true,\n                originalSize,\n                compressedSize,\n                compressionRatio: parseFloat(compressionRatio),\n                duration: parseFloat(duration)\n            };\n        } else {\n            throw new Error(\"Kompressiya natijasida fayl yaratilmadi\");\n        }\n    } catch (error) {\n        console.error(\"❌ Video kompressiya xatosi:\", error.message);\n        if (error.message.includes(\"timeout\") || error.message.includes(\"ffmpeg\")) {\n            console.log(\"⚠️ Kompressiya muvaffaqiyatsiz, asl fayl ishlatiladi\");\n            return {\n                success: false,\n                error: error.message,\n                useOriginal: true\n            };\n        }\n        throw error;\n    }\n}\n// Video fayl ekanligini aniqlash\nfunction isVideoFile(mimeType, filename) {\n    if (mimeType && VIDEO_FORMATS.includes(mimeType.toLowerCase())) {\n        return true;\n    }\n    const videoExtensions = [\n        \".mp4\",\n        \".avi\",\n        \".mov\",\n        \".wmv\",\n        \".flv\",\n        \".webm\",\n        \".mkv\",\n        \".3gp\",\n        \".m4v\"\n    ];\n    const extension = path__WEBPACK_IMPORTED_MODULE_4___default().extname(filename).toLowerCase();\n    return videoExtensions.includes(extension);\n}\n// Fayl nomini tozalash\nfunction sanitizeFilename(filename) {\n    return filename.replace(/[^a-zA-Z0-9\\-_\\.]/g, \"_\").replace(/_{2,}/g, \"_\").toLowerCase();\n}\n// Faylni Catbox.moe ga yuklash\nasync function uploadFileToCatbox(filePath, fileName, mimeType) {\n    try {\n        if (!(0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(filePath)) {\n            throw new Error(`Fayl topilmadi: ${filePath}`);\n        }\n        console.log(\"\\uD83D\\uDCE4 Uploading to Catbox:\", fileName);\n        const fileBuffer = await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().readFile(filePath);\n        const fileSizeMB = (fileBuffer.length / 1024 / 1024).toFixed(2);\n        console.log(\"\\uD83D\\uDCC1 File size:\", fileSizeMB, \"MB\");\n        // Katta fayllar uchun warning (Catbox max 200MB, ammo user 1GB so'ragan, lekin cheklash kodda qo'yiladi)\n        if (fileBuffer.length > 200 * 1024 * 1024) {\n            throw new Error(\"Fayl hajmi Catbox.moe uchun juda katta (max 200MB)\");\n        }\n        const form = new (form_data__WEBPACK_IMPORTED_MODULE_9___default())();\n        form.append(\"reqtype\", \"fileupload\");\n        form.append(\"userhash\", CATBOX_USER_HASH);\n        form.append(\"fileToUpload\", fileBuffer, {\n            filename: fileName,\n            contentType: mimeType || \"application/octet-stream\"\n        });\n        console.log(\"\\uD83D\\uDD17 Uploading to Catbox API...\");\n        const uploadStartTime = Date.now();\n        const response = await axios__WEBPACK_IMPORTED_MODULE_8__[\"default\"].post(CATBOX_API_URL, form, {\n            headers: {\n                ...form.getHeaders()\n            },\n            timeout: 300000 // 5 minut\n        });\n        const uploadDuration = ((Date.now() - uploadStartTime) / 1000).toFixed(2);\n        if (response.status !== 200 || !response.data.startsWith(\"https://\")) {\n            throw new Error(`Upload muvaffaqiyatsiz: ${response.data}`);\n        }\n        const publicUrl = response.data.trim();\n        console.log(\"✅ Upload successful:\", publicUrl);\n        console.log(\"⏱️ Upload time:\", uploadDuration, \"seconds\");\n        console.log(\"\\uD83D\\uDCCA Upload speed:\", (fileBuffer.length / 1024 / 1024 / uploadDuration).toFixed(2), \"MB/s\");\n        return {\n            fileName: fileName,\n            publicUrl: publicUrl\n        };\n    } catch (error) {\n        console.error(\"❌ Upload error:\", error.message);\n        if (error.response) {\n            console.error(\"Upload response status:\", error.response.status);\n            console.error(\"Upload response data:\", error.response.data);\n        }\n        throw new Error(`Upload xatosi: ${error.message}`);\n    }\n}\n// Vaqtinchalik faylni o'chirish\nasync function cleanupTempFile(filePath) {\n    try {\n        if ((0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(filePath)) {\n            await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().unlink(filePath);\n            console.log(\"\\uD83D\\uDDD1️ Temp file deleted:\", filePath);\n        }\n    } catch (error) {\n        console.warn(\"⚠️ Temp file deletion warning:\", error.message);\n    }\n}\nconst config = {\n    api: {\n        bodyParser: false,\n        responseLimit: false\n    }\n};\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Faqat POST so'rovlari qabul qilinadi\",\n            method: req.method\n        });\n    }\n    console.log(\"\\uD83D\\uDE80 Starting upload process...\");\n    console.log(\"\\uD83C\\uDF10 Request headers:\", {\n        \"content-type\": req.headers[\"content-type\"],\n        \"content-length\": req.headers[\"content-length\"],\n        \"user-agent\": req.headers[\"user-agent\"]\n    });\n    // FFmpeg mavjudligini tekshirish\n    const isFFmpegAvailable = await checkFFmpegAvailability();\n    try {\n        // Vaqtinchalik papka sozlash\n        let tempDir;\n        try {\n            tempDir = os__WEBPACK_IMPORTED_MODULE_5___default().tmpdir();\n            console.log(\"\\uD83D\\uDCC1 Using temp directory:\", tempDir);\n            if (!(0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(tempDir)) {\n                await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().mkdir(tempDir, {\n                    recursive: true\n                });\n                console.log(\"\\uD83D\\uDCC1 Created temp directory:\", tempDir);\n            }\n        } catch (tempError) {\n            console.error(\"❌ Temp directory error:\", tempError.message);\n            tempDir = path__WEBPACK_IMPORTED_MODULE_4___default().join(process.cwd(), \"temp\");\n            if (!(0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(tempDir)) {\n                await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().mkdir(tempDir, {\n                    recursive: true\n                });\n                console.log(\"\\uD83D\\uDCC1 Created fallback temp directory:\", tempDir);\n            }\n        }\n        // Formidable sozlamalari - max 1GB per file\n        const form = (0,formidable__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n            multiples: true,\n            uploadDir: tempDir,\n            keepExtensions: true,\n            allowEmptyFiles: false,\n            minFileSize: 1,\n            maxFileSize: 1024 * 1024 * 1024,\n            maxFiles: Infinity,\n            maxTotalFileSize: Infinity,\n            maxFieldsSize: Infinity,\n            createDirsFromUploads: true\n        });\n        console.log(\"\\uD83D\\uDCCB Parsing form data...\");\n        const { fields, files } = await new Promise((resolve, reject)=>{\n            form.parse(req, (err, fields, files)=>{\n                if (err) {\n                    console.error(\"❌ Form parsing error:\", err.message);\n                    reject(new Error(`Form parsing xatosi: ${err.message}`));\n                } else {\n                    console.log(\"✅ Form parsed successfully\");\n                    resolve({\n                        fields,\n                        files\n                    });\n                }\n            });\n        });\n        console.log(\"\\uD83D\\uDCC1 Files received:\", Object.keys(files));\n        console.log(\"\\uD83D\\uDCDD Fields received:\", Object.keys(fields));\n        if (!files.file) {\n            return res.status(400).json({\n                error: \"Hech qanday fayl yuklanmadi\",\n                received: Object.keys(files)\n            });\n        }\n        const uploadedFiles = Array.isArray(files.file) ? files.file : [\n            files.file\n        ];\n        const totalSize = uploadedFiles.reduce((sum, file)=>sum + (file.size || 0), 0);\n        const type = Array.isArray(fields.type) ? fields.type[0] : fields.type || \"post\";\n        const username = Array.isArray(fields.username) ? fields.username[0] : fields.username;\n        const postIndex = Array.isArray(fields.postIndex) ? fields.postIndex[0] : fields.postIndex;\n        if (!username) {\n            return res.status(400).json({\n                error: \"Username majburiy\",\n                fields: Object.keys(fields)\n            });\n        }\n        console.log(`📊 Upload session: type=${type}, username=${username}, files=${uploadedFiles.length}`);\n        console.log(`📊 Total size: ${(totalSize / 1024 / 1024).toFixed(2)} MB`);\n        console.log(`🎬 Video compression: ${isFFmpegAvailable ? \"ENABLED\" : \"DISABLED\"}`);\n        const results = [];\n        const errors = [];\n        // Har bir faylni yuklash\n        for(let i = 0; i < uploadedFiles.length; i++){\n            const file = uploadedFiles[i];\n            let tempFilePath = null;\n            let compressedFilePath = null;\n            try {\n                const originalName = file.originalFilename || `file_${i + 1}`;\n                const mimeType = file.mimetype || \"application/octet-stream\";\n                const fileSize = file.size || 0;\n                tempFilePath = file.filepath;\n                console.log(`📤 Processing ${i + 1}/${uploadedFiles.length}: ${originalName}`);\n                console.log(`📊 Size: ${(fileSize / 1024 / 1024).toFixed(2)}MB, Type: ${mimeType}`);\n                if (fileSize === 0) {\n                    throw new Error(\"Bo'sh fayl\");\n                }\n                if (!(0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(tempFilePath)) {\n                    console.log(\"⏳ File not found, waiting 1 second...\");\n                    await new Promise((resolve)=>setTimeout(resolve, 1000));\n                    if (!(0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(tempFilePath)) {\n                        throw new Error(`Vaqtinchalik fayl topilmadi: ${tempFilePath}`);\n                    }\n                }\n                const fileStats = await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().stat(tempFilePath);\n                const actualFileSize = fileStats.size;\n                console.log(`📊 File stats: reported=${fileSize}, actual=${actualFileSize}`);\n                if (actualFileSize === 0) {\n                    throw new Error(\"Bo'sh fayl\");\n                }\n                // Video kompressiya\n                let finalFilePath = tempFilePath;\n                let finalFileSize = actualFileSize;\n                let compressionInfo = null;\n                if (isFFmpegAvailable && isVideoFile(mimeType, originalName)) {\n                    console.log(\"\\uD83C\\uDFAC Video fayl aniqlandi, kompressiya boshlanmoqda...\");\n                    const compressedName = `compressed_${Date.now()}_${path__WEBPACK_IMPORTED_MODULE_4___default().basename(tempFilePath, path__WEBPACK_IMPORTED_MODULE_4___default().extname(tempFilePath))}.mp4`;\n                    compressedFilePath = path__WEBPACK_IMPORTED_MODULE_4___default().join(tempDir, compressedName);\n                    try {\n                        compressionInfo = await compressVideo(tempFilePath, compressedFilePath, mimeType);\n                        if (compressionInfo.success) {\n                            finalFilePath = compressedFilePath;\n                            finalFileSize = compressionInfo.compressedSize;\n                            console.log(`✅ Video kompressiya muvaffaqiyatli: ${compressionInfo.compressionRatio}% tejash`);\n                        } else if (compressionInfo.useOriginal) {\n                            console.log(\"⚠️ Kompressiya ishlamadi, asl fayl ishlatiladi\");\n                        }\n                    } catch (compressionError) {\n                        console.error(\"❌ Video kompressiya xatosi:\", compressionError.message);\n                        console.log(\"⚠️ Asl fayl ishlatiladi\");\n                    }\n                }\n                // Fayl nomini yaratish\n                const safeOriginalName = sanitizeFilename(originalName);\n                const fileExtension = compressionInfo?.success ? \".mp4\" : path__WEBPACK_IMPORTED_MODULE_4___default().extname(safeOriginalName) || \"\";\n                const timestamp = Date.now();\n                const randomId = Math.random().toString(36).substring(2, 8);\n                let fileName;\n                if (type === \"profile\") {\n                    fileName = `profiles/${username}_${timestamp}_${randomId}${fileExtension}`;\n                } else {\n                    const postSuffix = postIndex ? `_post${postIndex}` : \"\";\n                    const fileSuffix = uploadedFiles.length > 1 ? `_${i + 1}` : \"\";\n                    fileName = `posts/${username}${postSuffix}${fileSuffix}_${timestamp}_${randomId}${fileExtension}`;\n                }\n                console.log(`🎯 Destination: ${fileName}`);\n                // Faylni yuklash\n                const uploadResult = await uploadFileToCatbox(finalFilePath, fileName, compressionInfo?.success ? \"video/mp4\" : mimeType);\n                // Umumiy URL\n                const publicUrl = uploadResult.publicUrl;\n                results.push({\n                    success: true,\n                    url: publicUrl,\n                    filename: uploadResult.fileName,\n                    originalName: originalName,\n                    fileSize: finalFileSize,\n                    originalFileSize: actualFileSize,\n                    mimeType: compressionInfo?.success ? \"video/mp4\" : mimeType,\n                    type: type,\n                    fileIndex: i + 1,\n                    totalFiles: uploadedFiles.length,\n                    compressed: compressionInfo?.success || false,\n                    compressionRatio: compressionInfo?.compressionRatio || null,\n                    compressionDuration: compressionInfo?.duration || null\n                });\n                console.log(`✅ Success ${i + 1}/${uploadedFiles.length}: ${originalName}`);\n            } catch (fileError) {\n                console.error(`❌ File error ${i + 1}/${uploadedFiles.length}:`, fileError.message);\n                errors.push({\n                    filename: file.originalFilename || `file_${i + 1}`,\n                    error: fileError.message,\n                    fileIndex: i + 1\n                });\n            } finally{\n                // Vaqtinchalik fayllarni o'chirish\n                if (tempFilePath) {\n                    await cleanupTempFile(tempFilePath);\n                }\n                if (compressedFilePath && compressedFilePath !== tempFilePath) {\n                    await cleanupTempFile(compressedFilePath);\n                }\n            }\n        }\n        // Natija\n        const response = {\n            success: errors.length === 0,\n            uploaded: results,\n            errors: errors,\n            summary: {\n                totalFiles: uploadedFiles.length,\n                successful: results.length,\n                failed: errors.length,\n                totalSize: totalSize < 1024 * 1024 ? `${(totalSize / 1024).toFixed(2)}KB` : `${(totalSize / 1024 / 1024).toFixed(2)}MB`,\n                videosCompressed: results.filter((r)=>r.compressed).length,\n                ffmpegAvailable: isFFmpegAvailable\n            }\n        };\n        console.log(\"\\uD83C\\uDF89 Upload complete:\", response.summary);\n        const statusCode = errors.length === 0 ? 200 : results.length > 0 ? 207 : 400;\n        return res.status(statusCode).json(response);\n    } catch (error) {\n        console.error(\"❌ Global error:\", error.message);\n        console.error(\"Stack:\", error.stack);\n        return res.status(500).json({\n            error: \"Server xatoligi\",\n            details: error.message,\n            timestamp: new Date().toISOString(),\n            env_check: {\n                hasUserHash: !!CATBOX_USER_HASH,\n                nodeEnv: \"development\"\n            }\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/upload.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();