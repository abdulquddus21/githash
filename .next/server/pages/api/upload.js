"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/upload";
exports.ids = ["pages/api/upload"];
exports.modules = {

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "formidable":
/*!*****************************!*\
  !*** external "formidable" ***!
  \*****************************/
/***/ ((module) => {

module.exports = import("formidable");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\upload.js */ \"(api)/./pages/api/upload.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/upload\",\n        pathname: \"/api/upload\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnVwbG9hZCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDdXBsb2FkLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ29EO0FBQ3BEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxpREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsaURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJpdmF0ZS8/YjNmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXNcXFxcYXBpXFxcXHVwbG9hZC5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3VwbG9hZFwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3VwbG9hZFwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/upload.js":
/*!*****************************!*\
  !*** ./pages/api/upload.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var formidable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! formidable */ \"formidable\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([formidable__WEBPACK_IMPORTED_MODULE_0__]);\nformidable__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\nconst config = {\n    api: {\n        bodyParser: false\n    }\n};\n// Supabase konfiguratsiyasi\nconst supabaseUrl = \"https://xzbwfoacsnrmgjmildcr.supabase.co\";\nconst supabaseServiceKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh6Yndmb2Fjc25ybWdqbWlsZGNyIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1ODE5OTE3NSwiZXhwIjoyMDczNzc1MTc1fQ.t0u8Uy7D7N3KWgNthFTijhCucN4VcFc39QAPAwDYXfo\";\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(supabaseUrl, supabaseServiceKey);\n// Bucket nomi\nconst BUCKET_NAME = \"uploads\";\n// Ruxsat berilgan file turlari\nconst ALLOWED_FILE_TYPES = {\n    images: [\n        \".jpg\",\n        \".jpeg\",\n        \".png\",\n        \".gif\",\n        \".webp\",\n        \".svg\",\n        \".bmp\",\n        \".tiff\"\n    ],\n    videos: [\n        \".mp4\",\n        \".avi\",\n        \".mkv\",\n        \".mov\",\n        \".wmv\",\n        \".flv\",\n        \".webm\",\n        \".m4v\"\n    ],\n    documents: [\n        \".pdf\",\n        \".doc\",\n        \".docx\",\n        \".txt\",\n        \".rtf\"\n    ],\n    audio: [\n        \".mp3\",\n        \".wav\",\n        \".aac\",\n        \".ogg\",\n        \".flac\"\n    ],\n    archives: [\n        \".zip\",\n        \".rar\",\n        \".7z\",\n        \".tar\",\n        \".gz\"\n    ]\n};\n// MIME type tekshiruvi\nconst ALLOWED_MIME_TYPES = [\n    // Rasm fayllari\n    \"image/jpeg\",\n    \"image/png\",\n    \"image/gif\",\n    \"image/webp\",\n    \"image/svg+xml\",\n    \"image/bmp\",\n    \"image/tiff\",\n    // Video fayllar\n    \"video/mp4\",\n    \"video/avi\",\n    \"video/quicktime\",\n    \"video/x-msvideo\",\n    \"video/x-ms-wmv\",\n    \"video/x-flv\",\n    \"video/webm\",\n    // Hujjat fayllari\n    \"application/pdf\",\n    \"application/msword\",\n    \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    \"text/plain\",\n    \"application/rtf\",\n    // Audio fayllar\n    \"audio/mpeg\",\n    \"audio/wav\",\n    \"audio/aac\",\n    \"audio/ogg\",\n    \"audio/flac\",\n    // Arxiv fayllari\n    \"application/zip\",\n    \"application/x-rar-compressed\",\n    \"application/x-7z-compressed\",\n    \"application/x-tar\",\n    \"application/gzip\"\n];\n// Fayl o'lchamini tekshirish (10MB limit - Supabase uchun)\nconst MAX_FILE_SIZE = 10 * 1024 * 1024; // 10MB\n// Xavfli fayllarni tekshirish\nconst DANGEROUS_EXTENSIONS = [\n    \".exe\",\n    \".bat\",\n    \".cmd\",\n    \".scr\",\n    \".pif\",\n    \".com\",\n    \".js\",\n    \".vbs\",\n    \".jar\"\n];\nfunction isFileTypeAllowed(filename, mimetype) {\n    const extension = path__WEBPACK_IMPORTED_MODULE_3___default().extname(filename).toLowerCase();\n    // Xavfli fayllarni rad etish\n    if (DANGEROUS_EXTENSIONS.includes(extension)) {\n        return false;\n    }\n    // Ruxsat berilgan kengaytmalarni tekshirish\n    const allAllowedExtensions = Object.values(ALLOWED_FILE_TYPES).flat();\n    const isExtensionAllowed = allAllowedExtensions.includes(extension);\n    // MIME type tekshiruvi\n    const isMimeTypeAllowed = ALLOWED_MIME_TYPES.includes(mimetype);\n    return isExtensionAllowed && isMimeTypeAllowed;\n}\nfunction sanitizeFilename(filename) {\n    // Xavfli belgilarni olib tashlash\n    return filename.replace(/[^a-zA-Z0-9\\-_\\.]/g, \"_\");\n}\n// Supabase bucket yaratish (agar mavjud bo'lmasa)\nasync function ensureBucketExists() {\n    try {\n        const { data: buckets, error } = await supabase.storage.listBuckets();\n        if (error) {\n            console.error(\"Bucket list error:\", error);\n            return false;\n        }\n        const bucketExists = buckets.some((bucket)=>bucket.name === BUCKET_NAME);\n        if (!bucketExists) {\n            const { error: createError } = await supabase.storage.createBucket(BUCKET_NAME, {\n                public: true,\n                allowedMimeTypes: ALLOWED_MIME_TYPES,\n                fileSizeLimit: MAX_FILE_SIZE\n            });\n            if (createError) {\n                console.error(\"Bucket create error:\", createError);\n                return false;\n            }\n            console.log(`Bucket \"${BUCKET_NAME}\" yaratildi`);\n        }\n        return true;\n    } catch (error) {\n        console.error(\"Bucket ensure error:\", error);\n        return false;\n    }\n}\n// Bitta faylni yuklash funksiyasi\nasync function uploadSingleFile(fileArray, type, username, postIndex) {\n    const originalName = fileArray.originalFilename || \"unknown\";\n    const mimetype = fileArray.mimetype;\n    const fileSize = fileArray.size;\n    // Fayl turini tekshirish\n    if (!isFileTypeAllowed(originalName, mimetype)) {\n        // Vaqtinchalik faylni o'chirish\n        if (fs__WEBPACK_IMPORTED_MODULE_2___default().existsSync(fileArray.filepath)) {\n            fs__WEBPACK_IMPORTED_MODULE_2___default().unlinkSync(fileArray.filepath);\n        }\n        return {\n            success: false,\n            error: \"Ushbu fayl turi ruxsat berilmagan\",\n            filename: originalName\n        };\n    }\n    // Fayl o'lchamini qo'shimcha tekshirish\n    if (fileSize > MAX_FILE_SIZE) {\n        if (fs__WEBPACK_IMPORTED_MODULE_2___default().existsSync(fileArray.filepath)) {\n            fs__WEBPACK_IMPORTED_MODULE_2___default().unlinkSync(fileArray.filepath);\n        }\n        return {\n            success: false,\n            error: \"Fayl hajmi juda katta (maksimum 10MB)\",\n            filename: originalName\n        };\n    }\n    try {\n        // Fayl nomini xavfsiz qilish\n        const safeOriginalName = sanitizeFilename(originalName);\n        const fileExtension = path__WEBPACK_IMPORTED_MODULE_3___default().extname(safeOriginalName);\n        // Noyob fayl nomi yaratish\n        const timestamp = Date.now();\n        const randomString = Math.random().toString(36).substring(2, 8);\n        let fileName;\n        let folderPath;\n        if (type === \"profile\") {\n            folderPath = \"profiles\";\n            fileName = `${username}_${timestamp}_${randomString}${fileExtension}`;\n        } else {\n            folderPath = \"posts\";\n            fileName = `${username}_${postIndex}_${timestamp}_${randomString}${fileExtension}`;\n        }\n        // To'liq fayl yo'li\n        const filePath = `${folderPath}/${fileName}`;\n        // Faylni o'qish\n        const fileBuffer = fs__WEBPACK_IMPORTED_MODULE_2___default().readFileSync(fileArray.filepath);\n        // Supabase Storage ga yuklash\n        const { data: uploadData, error: uploadError } = await supabase.storage.from(BUCKET_NAME).upload(filePath, fileBuffer, {\n            contentType: mimetype,\n            upsert: false\n        });\n        // Vaqtinchalik faylni o'chirish\n        if (fs__WEBPACK_IMPORTED_MODULE_2___default().existsSync(fileArray.filepath)) {\n            fs__WEBPACK_IMPORTED_MODULE_2___default().unlinkSync(fileArray.filepath);\n        }\n        if (uploadError) {\n            console.error(\"Supabase upload error:\", uploadError);\n            return {\n                success: false,\n                error: \"Faylni saqlashda xatolik\",\n                filename: originalName,\n                details: uploadError.message\n            };\n        }\n        // Public URL olish\n        const { data: urlData } = supabase.storage.from(BUCKET_NAME).getPublicUrl(filePath);\n        return {\n            success: true,\n            url: urlData.publicUrl,\n            filename: fileName,\n            originalName: originalName,\n            fileSize: fileSize,\n            mimeType: mimetype,\n            path: filePath,\n            bucket: BUCKET_NAME\n        };\n    } catch (fileError) {\n        console.error(\"File processing error:\", fileError);\n        // Vaqtinchalik faylni o'chirish\n        if (fs__WEBPACK_IMPORTED_MODULE_2___default().existsSync(fileArray.filepath)) {\n            fs__WEBPACK_IMPORTED_MODULE_2___default().unlinkSync(fileArray.filepath);\n        }\n        return {\n            success: false,\n            error: \"Faylni qayta ishlashda xatolik\",\n            filename: originalName\n        };\n    }\n}\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        // Bucket mavjudligini tekshirish\n        const bucketReady = await ensureBucketExists();\n        if (!bucketReady) {\n            return res.status(500).json({\n                error: \"Storage bucket tayyorlanmadi\"\n            });\n        }\n        const form = new formidable__WEBPACK_IMPORTED_MODULE_0__.IncomingForm({\n            maxFileSize: MAX_FILE_SIZE,\n            maxFiles: 10,\n            allowEmptyFiles: false,\n            minFileSize: 1,\n            multiples: true\n        });\n        form.parse(req, async (err, fields, files)=>{\n            if (err) {\n                console.error(\"Form parse error:\", err);\n                if (err.code === \"LIMIT_FILE_SIZE\") {\n                    return res.status(413).json({\n                        error: \"Fayl hajmi juda katta (maksimum 10MB)\"\n                    });\n                }\n                return res.status(500).json({\n                    error: \"Yuklashda xatolik yuz berdi\"\n                });\n            }\n            // Maydonlardan ma'lumotlarni olish\n            const type = Array.isArray(fields.type) ? fields.type[0] : fields.type;\n            const username = Array.isArray(fields.username) ? fields.username[0] : fields.username;\n            const postIndex = Array.isArray(fields.postIndex) ? fields.postIndex[0] : fields.postIndex;\n            // Fayllar massivini olish\n            const fileArray = files.file;\n            if (!fileArray || Array.isArray(fileArray) && fileArray.length === 0) {\n                return res.status(400).json({\n                    error: \"Hech qanday fayl yuklanmadi\"\n                });\n            }\n            // Barcha fayllarni bir vaqtda yuklash (parallel)\n            const uploadPromises = [];\n            // Fayllar massiv ekanligini tekshirish\n            const filesToProcess = Array.isArray(fileArray) ? fileArray : [\n                fileArray\n            ];\n            console.log(`Jami ${filesToProcess.length} ta fayl yuklanmoqda...`);\n            filesToProcess.forEach((file, index)=>{\n                if (file && file.filepath) {\n                    uploadPromises.push(uploadSingleFile(file, type, username, postIndex).then((result)=>({\n                            ...result,\n                            order: index // Tartib raqamini saqlash\n                        })));\n                }\n            });\n            try {\n                // Barcha yuklashlarni kutish\n                const results = await Promise.allSettled(uploadPromises);\n                // Natijalarni qayta ishlash\n                const successfulUploads = [];\n                const failedUploads = [];\n                results.forEach((result, index)=>{\n                    if (result.status === \"fulfilled\") {\n                        if (result.value.success) {\n                            successfulUploads.push(result.value);\n                        } else {\n                            failedUploads.push({\n                                ...result.value,\n                                order: index\n                            });\n                        }\n                    } else {\n                        failedUploads.push({\n                            success: false,\n                            error: \"Noma'lum xatolik\",\n                            order: index\n                        });\n                    }\n                });\n                // Javob tayyorlash\n                const response = {\n                    success: successfulUploads.length > 0,\n                    totalFiles: filesToProcess.length,\n                    successful: successfulUploads.length,\n                    failed: failedUploads.length,\n                    uploads: successfulUploads,\n                    errors: failedUploads\n                };\n                // Agar barcha fayllar muvaffaqiyatli yuklangan bo'lsa\n                if (failedUploads.length === 0) {\n                    res.status(200).json({\n                        ...response,\n                        message: `${successfulUploads.length} ta fayl muvaffaqiyatli yuklandi`\n                    });\n                } else if (successfulUploads.length === 0) {\n                    // Agar hech qaysi fayl yuklanmagan bo'lsa\n                    res.status(400).json({\n                        ...response,\n                        message: \"Hech qanday fayl yuklanmadi\"\n                    });\n                } else {\n                    // Qisman muvaffaqiyatli\n                    res.status(207).json({\n                        ...response,\n                        message: `${successfulUploads.length} ta fayl yuklandi, ${failedUploads.length} ta faylda xatolik`\n                    });\n                }\n            } catch (batchError) {\n                console.error(\"Batch upload error:\", batchError);\n                res.status(500).json({\n                    error: \"Fayllarni yuklashda xatolik\",\n                    details: batchError.message\n                });\n            }\n        });\n    } catch (error) {\n        console.error(\"Upload error:\", error);\n        res.status(500).json({\n            error: \"Ichki server xatoligi\"\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/upload.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();