"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/upload";
exports.ids = ["pages/api/upload"];
exports.modules = {

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "backblaze-b2":
/*!*******************************!*\
  !*** external "backblaze-b2" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("backblaze-b2");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "formidable":
/*!*****************************!*\
  !*** external "formidable" ***!
  \*****************************/
/***/ ((module) => {

module.exports = import("formidable");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("fs/promises");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\upload.js */ \"(api)/./pages/api/upload.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/upload\",\n        pathname: \"/api/upload\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnVwbG9hZCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDdXBsb2FkLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ29EO0FBQ3BEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxpREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsaURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJpdmF0ZS8/YjNmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXNcXFxcYXBpXFxcXHVwbG9hZC5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3VwbG9hZFwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3VwbG9hZFwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/upload.js":
/*!*****************************!*\
  !*** ./pages/api/upload.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var formidable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! formidable */ \"formidable\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var backblaze_b2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! backblaze-b2 */ \"backblaze-b2\");\n/* harmony import */ var backblaze_b2__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(backblaze_b2__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([formidable__WEBPACK_IMPORTED_MODULE_1__]);\nformidable__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\n// Supabase sozlamalari\nconst SUPABASE_URL = \"https://xzbwfoacsnrmgjmildcr.supabase.co\";\nconst SUPABASE_ANON_KEY = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh6Yndmb2Fjc25ybWdqbWlsZGNyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTgxOTkxNzUsImV4cCI6MjA3Mzc3NTE3NX0.c10rEbuzQIkVvuJEecEltokgaj6AqjyP5IoFVffjizc\";\n// Backblaze sozlamalari\nconst BACKBLAZE_KEY_ID = process.env.BACKBLAZE_KEY_ID;\nconst BACKBLAZE_APP_KEY = process.env.BACKBLAZE_APP_KEY;\nconst BUCKET_NAME = process.env.BUCKET_NAME;\n// Supabase client\nconst supabaseClient = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(SUPABASE_URL, SUPABASE_ANON_KEY);\n// Backblaze client\nlet b2 = null;\nlet isB2Initialized = false;\nlet bucketId = null;\nlet downloadUrl = null;\n// Backblaze ni ishga tushirish\nasync function initializeB2() {\n    try {\n        if (isB2Initialized && b2 && bucketId && downloadUrl) {\n            console.log(\"✅ B2 already initialized\");\n            return true;\n        }\n        // Environment variables ni tekshirish\n        if (!BACKBLAZE_KEY_ID || !BACKBLAZE_APP_KEY || !BUCKET_NAME) {\n            throw new Error(\"Backblaze sozlamalari .env.local faylida to'liq emas\");\n        }\n        console.log(\"\\uD83D\\uDD04 Initializing Backblaze B2...\");\n        console.log(\"Key ID:\", BACKBLAZE_KEY_ID.substring(0, 10) + \"...\");\n        console.log(\"Bucket:\", BUCKET_NAME);\n        // B2 client yaratish\n        b2 = new (backblaze_b2__WEBPACK_IMPORTED_MODULE_6___default())({\n            applicationKeyId: BACKBLAZE_KEY_ID,\n            applicationKey: BACKBLAZE_APP_KEY\n        });\n        // Autorizatsiya\n        console.log(\"\\uD83D\\uDD10 Authorizing with Backblaze...\");\n        const authResponse = await b2.authorize();\n        if (!authResponse?.data) {\n            throw new Error(\"Authorization javob bo'sh\");\n        }\n        downloadUrl = authResponse.data.downloadUrl;\n        console.log(\"✅ Authorization successful\");\n        // Bucket topish\n        console.log(\"\\uD83D\\uDDC2️ Finding bucket...\");\n        const bucketsResponse = await b2.listBuckets();\n        if (!bucketsResponse?.data?.buckets) {\n            throw new Error(\"Buckets ro'yxati olinmadi\");\n        }\n        const bucket = bucketsResponse.data.buckets.find((b)=>b.bucketName === BUCKET_NAME);\n        if (!bucket) {\n            throw new Error(`Bucket \"${BUCKET_NAME}\" topilmadi. Mavjud bucketlar: ${bucketsResponse.data.buckets.map((b)=>b.bucketName).join(\", \")}`);\n        }\n        bucketId = bucket.bucketId;\n        isB2Initialized = true;\n        console.log(\"✅ Bucket topildi:\", bucket.bucketName);\n        console.log(\"✅ Bucket ID:\", bucketId);\n        console.log(\"✅ Download URL:\", downloadUrl.substring(0, 30) + \"...\");\n        return true;\n    } catch (error) {\n        console.error(\"❌ Backblaze initialization xatosi:\");\n        console.error(\"Message:\", error.message);\n        console.error(\"Status:\", error.response?.status);\n        console.error(\"Response:\", error.response?.data);\n        // Reset qilish\n        b2 = null;\n        isB2Initialized = false;\n        bucketId = null;\n        downloadUrl = null;\n        if (error.response?.status === 401) {\n            throw new Error(\"❌ Backblaze kalitlari noto'g'ri! Yangi Application Key yarating va ruxsatlarni tekshiring.\");\n        } else if (error.response?.status === 403) {\n            throw new Error(\"❌ Ruxsat yo'q! Application Key da Read/Write ruxsatlari bor-mi tekshiring.\");\n        } else if (error.code === \"ENOTFOUND\") {\n            throw new Error(\"❌ Internet ulanishi muammosi\");\n        } else {\n            throw new Error(`❌ Backblaze xatosi: ${error.message}`);\n        }\n    }\n}\n// Fayl nomini tozalash\nfunction sanitizeFilename(filename) {\n    return filename.replace(/[^a-zA-Z0-9\\-_\\.]/g, \"_\").replace(/_{2,}/g, \"_\").toLowerCase();\n}\n// Faylni Backblaze ga yuklash\nasync function uploadFileToB2(filePath, fileName, mimeType) {\n    try {\n        if (!b2 || !bucketId) {\n            throw new Error(\"B2 ishga tushirilmagan\");\n        }\n        // Fayl mavjudligini tekshirish\n        if (!(0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(filePath)) {\n            throw new Error(`Fayl topilmadi: ${filePath}`);\n        }\n        console.log(\"\\uD83D\\uDCE4 Uploading:\", fileName);\n        // Fayl o'qish\n        const fileBuffer = await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().readFile(filePath);\n        console.log(\"\\uD83D\\uDCC1 File size:\", (fileBuffer.length / 1024 / 1024).toFixed(2), \"MB\");\n        // Upload URL olish\n        const uploadUrlResponse = await b2.getUploadUrl({\n            bucketId\n        });\n        if (!uploadUrlResponse?.data) {\n            throw new Error(\"Upload URL olinmadi\");\n        }\n        // Faylni yuklash\n        const uploadResponse = await b2.uploadFile({\n            uploadUrl: uploadUrlResponse.data.uploadUrl,\n            uploadAuthToken: uploadUrlResponse.data.authorizationToken,\n            fileName: fileName,\n            data: fileBuffer,\n            contentType: mimeType || \"application/octet-stream\"\n        });\n        if (!uploadResponse?.data) {\n            throw new Error(\"Upload javob bo'sh\");\n        }\n        console.log(\"✅ Upload successful:\", uploadResponse.data.fileName);\n        return uploadResponse.data;\n    } catch (error) {\n        console.error(\"❌ Upload error:\", error.message);\n        throw new Error(`Upload xatosi: ${error.message}`);\n    }\n}\n// Umumiy URL yaratish\nfunction createPublicUrl(fileName) {\n    try {\n        if (!downloadUrl || !BUCKET_NAME) {\n            throw new Error(\"Download URL yoki bucket nomi yo'q\");\n        }\n        const encodedFileName = encodeURIComponent(fileName);\n        const publicUrl = `${downloadUrl}/file/${BUCKET_NAME}/${encodedFileName}`;\n        console.log(\"\\uD83D\\uDD17 Public URL:\", publicUrl);\n        return publicUrl;\n    } catch (error) {\n        console.error(\"❌ URL yaratish xatosi:\", error.message);\n        throw new Error(`URL yaratish xatosi: ${error.message}`);\n    }\n}\n// Vaqtinchalik faylni o'chirish\nasync function cleanupTempFile(filePath) {\n    try {\n        if ((0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(filePath)) {\n            await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().unlink(filePath);\n            console.log(\"\\uD83D\\uDDD1️ Temp file deleted:\", filePath);\n        }\n    } catch (error) {\n        console.warn(\"⚠️ Temp file deletion warning:\", error.message);\n    }\n}\nconst config = {\n    api: {\n        bodyParser: false\n    }\n};\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Faqat POST so'rovlari qabul qilinadi\",\n            method: req.method\n        });\n    }\n    try {\n        console.log(\"\\uD83D\\uDE80 Starting upload process...\");\n        // Backblaze ni ishga tushirish\n        await initializeB2();\n        // Vaqtinchalik papka yaratish va tekshirish\n        let tempDir;\n        try {\n            tempDir = os__WEBPACK_IMPORTED_MODULE_5___default().tmpdir();\n            console.log(\"\\uD83D\\uDCC1 Using temp directory:\", tempDir);\n            // Temp papka mavjudligini tekshirish va yaratish\n            if (!(0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(tempDir)) {\n                await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().mkdir(tempDir, {\n                    recursive: true\n                });\n                console.log(\"\\uD83D\\uDCC1 Created temp directory:\", tempDir);\n            }\n        } catch (tempError) {\n            console.error(\"❌ Temp directory error:\", tempError.message);\n            // Fallback - joriy papkada temp yaratish\n            tempDir = path__WEBPACK_IMPORTED_MODULE_4___default().join(process.cwd(), \"temp\");\n            if (!(0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(tempDir)) {\n                await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().mkdir(tempDir, {\n                    recursive: true\n                });\n                console.log(\"\\uD83D\\uDCC1 Created fallback temp directory:\", tempDir);\n            }\n        }\n        // Formidable sozlamalari\n        const form = (0,formidable__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n            multiples: true,\n            uploadDir: tempDir,\n            keepExtensions: true,\n            allowEmptyFiles: false,\n            minFileSize: 1,\n            maxFileSize: 100 * 1024 * 1024,\n            maxFiles: 5,\n            maxTotalFileSize: 500 * 1024 * 1024,\n            maxFieldsSize: 10 * 1024 * 1024,\n            createDirsFromUploads: true\n        });\n        console.log(\"\\uD83D\\uDCCB Parsing form data...\");\n        const { fields, files } = await new Promise((resolve, reject)=>{\n            form.parse(req, (err, fields, files)=>{\n                if (err) {\n                    console.error(\"❌ Form parsing error:\", err.message);\n                    reject(new Error(`Form parsing xatosi: ${err.message}`));\n                } else {\n                    console.log(\"✅ Form parsed successfully\");\n                    resolve({\n                        fields,\n                        files\n                    });\n                }\n            });\n        });\n        console.log(\"\\uD83D\\uDCC1 Files received:\", Object.keys(files));\n        console.log(\"\\uD83D\\uDCDD Fields received:\", Object.keys(fields));\n        // Fayl mavjudligini tekshirish\n        if (!files.file) {\n            return res.status(400).json({\n                error: \"Hech qanday fayl yuklanmadi\",\n                received: Object.keys(files)\n            });\n        }\n        const uploadedFiles = Array.isArray(files.file) ? files.file : [\n            files.file\n        ];\n        // Fayllar sonini tekshirish\n        if (uploadedFiles.length > 5) {\n            return res.status(400).json({\n                error: \"Maksimal 5 ta fayl yuklash mumkin\",\n                received: uploadedFiles.length\n            });\n        }\n        // Jami hajmni tekshirish\n        const totalSize = uploadedFiles.reduce((sum, file)=>sum + (file.size || 0), 0);\n        if (totalSize > 500 * 1024 * 1024) {\n            return res.status(400).json({\n                error: \"Jami fayllar hajmi 500MB dan oshmasin\",\n                totalSize: `${(totalSize / 1024 / 1024).toFixed(2)}MB`\n            });\n        }\n        // Fields ni olish\n        const type = Array.isArray(fields.type) ? fields.type[0] : fields.type || \"post\";\n        const username = Array.isArray(fields.username) ? fields.username[0] : fields.username;\n        const postIndex = Array.isArray(fields.postIndex) ? fields.postIndex[0] : fields.postIndex;\n        if (!username) {\n            return res.status(400).json({\n                error: \"Username majburiy\",\n                fields: Object.keys(fields)\n            });\n        }\n        console.log(`📊 Upload session: type=${type}, username=${username}, files=${uploadedFiles.length}`);\n        const results = [];\n        const errors = [];\n        // Har bir faylni yuklash\n        for(let i = 0; i < uploadedFiles.length; i++){\n            const file = uploadedFiles[i];\n            let tempFilePath = null;\n            try {\n                const originalName = file.originalFilename || `file_${i + 1}`;\n                const mimeType = file.mimetype || \"application/octet-stream\";\n                const fileSize = file.size || 0;\n                tempFilePath = file.filepath;\n                console.log(`📤 Processing ${i + 1}/${uploadedFiles.length}: ${originalName}`);\n                console.log(`📊 Size: ${(fileSize / 1024 / 1024).toFixed(2)}MB, Type: ${mimeType}`);\n                // Fayl hajmini tekshirish\n                if (fileSize > 100 * 1024 * 1024) {\n                    throw new Error(`Fayl hajmi 100MB dan katta: ${(fileSize / 1024 / 1024).toFixed(2)}MB`);\n                }\n                if (fileSize === 0) {\n                    throw new Error(\"Bo'sh fayl\");\n                }\n                // Fayl mavjudligini tekshirish\n                if (!(0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(tempFilePath)) {\n                    // Agar fayl yo'q bo'lsa, biroz kutib qayta tekshirish\n                    console.log(\"⏳ File not found, waiting 1 second...\");\n                    await new Promise((resolve)=>setTimeout(resolve, 1000));\n                    if (!(0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(tempFilePath)) {\n                        throw new Error(`Vaqtinchalik fayl topilmadi: ${tempFilePath}`);\n                    }\n                }\n                // Fayl hajmini olish va tekshirish\n                const fileStats = await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().stat(tempFilePath);\n                const actualFileSize = fileStats.size;\n                console.log(`📊 File stats: reported=${fileSize}, actual=${actualFileSize}`);\n                if (actualFileSize === 0) {\n                    throw new Error(\"Bo'sh fayl\");\n                }\n                // Reported va actual size farqini tekshirish\n                if (fileSize > 0 && Math.abs(fileSize - actualFileSize) > 1000) {\n                    console.warn(`⚠️ File size mismatch: reported=${fileSize}, actual=${actualFileSize}`);\n                }\n                // Fayl nomini yaratish\n                const safeOriginalName = sanitizeFilename(originalName);\n                const fileExtension = path__WEBPACK_IMPORTED_MODULE_4___default().extname(safeOriginalName) || \"\";\n                const timestamp = Date.now();\n                const randomId = Math.random().toString(36).substring(2, 8);\n                let fileName;\n                if (type === \"profile\") {\n                    fileName = `profiles/${username}_${timestamp}_${randomId}${fileExtension}`;\n                } else {\n                    const postSuffix = postIndex ? `_post${postIndex}` : \"\";\n                    const fileSuffix = uploadedFiles.length > 1 ? `_${i + 1}` : \"\";\n                    fileName = `posts/${username}${postSuffix}${fileSuffix}_${timestamp}_${randomId}${fileExtension}`;\n                }\n                console.log(`🎯 Destination: ${fileName}`);\n                // Faylni yuklash\n                const uploadResult = await uploadFileToB2(tempFilePath, fileName, mimeType);\n                // Umumiy URL yaratish\n                const publicUrl = createPublicUrl(fileName);\n                results.push({\n                    success: true,\n                    url: publicUrl,\n                    filename: uploadResult.fileName,\n                    originalName: originalName,\n                    fileSize: fileSize,\n                    mimeType: mimeType,\n                    bucket: BUCKET_NAME,\n                    type: type,\n                    fileIndex: i + 1,\n                    totalFiles: uploadedFiles.length\n                });\n                console.log(`✅ Success ${i + 1}/${uploadedFiles.length}: ${originalName}`);\n            } catch (fileError) {\n                console.error(`❌ File error ${i + 1}/${uploadedFiles.length}:`, fileError.message);\n                errors.push({\n                    filename: file.originalFilename || `file_${i + 1}`,\n                    error: fileError.message,\n                    fileIndex: i + 1\n                });\n            } finally{\n                // Vaqtinchalik faylni o'chirish\n                if (tempFilePath) {\n                    await cleanupTempFile(tempFilePath);\n                }\n            }\n        }\n        // Natija\n        const response = {\n            success: errors.length === 0,\n            uploaded: results,\n            errors: errors,\n            summary: {\n                totalFiles: uploadedFiles.length,\n                successful: results.length,\n                failed: errors.length,\n                totalSize: `${(totalSize / 1024 / 1024).toFixed(2)}MB`\n            }\n        };\n        console.log(\"\\uD83C\\uDF89 Upload complete:\", response.summary);\n        const statusCode = errors.length === 0 ? 200 : results.length > 0 ? 207 : 400;\n        return res.status(statusCode).json(response);\n    } catch (error) {\n        console.error(\"❌ Global error:\", error.message);\n        console.error(\"Stack:\", error.stack);\n        return res.status(500).json({\n            error: \"Server xatoligi\",\n            details: error.message,\n            timestamp: new Date().toISOString()\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cGxvYWQuanM/NTU3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnO1xyXG5pbXBvcnQgZm9ybWlkYWJsZSBmcm9tICdmb3JtaWRhYmxlJztcclxuaW1wb3J0IGZzIGZyb20gJ2ZzL3Byb21pc2VzJztcclxuaW1wb3J0IHsgZXhpc3RzU3luYyB9IGZyb20gJ2ZzJztcclxuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XHJcbmltcG9ydCBvcyBmcm9tICdvcyc7XHJcbmltcG9ydCBCMiBmcm9tICdiYWNrYmxhemUtYjInO1xyXG5cclxuLy8gU3VwYWJhc2Ugc296bGFtYWxhcmlcclxuY29uc3QgU1VQQUJBU0VfVVJMID0gJ2h0dHBzOi8veHpid2ZvYWNzbnJtZ2ptaWxkY3Iuc3VwYWJhc2UuY28nO1xyXG5jb25zdCBTVVBBQkFTRV9BTk9OX0tFWSA9ICdleUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKcGMzTWlPaUp6ZFhCaFltRnpaU0lzSW5KbFppSTZJbmg2WW5kbWIyRmpjMjV5YldkcWJXbHNaR055SWl3aWNtOXNaU0k2SW1GdWIyNGlMQ0pwWVhRaU9qRTNOVGd4T1RreE56VXNJbVY0Y0NJNk1qQTNNemMzTlRFM05YMC5jMTByRWJ1elFJa1Z2dUpFZWNFbHRva2dhajZBcWp5UDVJb0ZWZmZqaXpjJztcclxuXHJcbi8vIEJhY2tibGF6ZSBzb3psYW1hbGFyaVxyXG5jb25zdCBCQUNLQkxBWkVfS0VZX0lEID0gcHJvY2Vzcy5lbnYuQkFDS0JMQVpFX0tFWV9JRDtcclxuY29uc3QgQkFDS0JMQVpFX0FQUF9LRVkgPSBwcm9jZXNzLmVudi5CQUNLQkxBWkVfQVBQX0tFWTtcclxuY29uc3QgQlVDS0VUX05BTUUgPSBwcm9jZXNzLmVudi5CVUNLRVRfTkFNRTtcclxuXHJcbi8vIFN1cGFiYXNlIGNsaWVudFxyXG5jb25zdCBzdXBhYmFzZUNsaWVudCA9IGNyZWF0ZUNsaWVudChTVVBBQkFTRV9VUkwsIFNVUEFCQVNFX0FOT05fS0VZKTtcclxuXHJcbi8vIEJhY2tibGF6ZSBjbGllbnRcclxubGV0IGIyID0gbnVsbDtcclxubGV0IGlzQjJJbml0aWFsaXplZCA9IGZhbHNlO1xyXG5sZXQgYnVja2V0SWQgPSBudWxsO1xyXG5sZXQgZG93bmxvYWRVcmwgPSBudWxsO1xyXG5cclxuLy8gQmFja2JsYXplIG5pIGlzaGdhIHR1c2hpcmlzaFxyXG5hc3luYyBmdW5jdGlvbiBpbml0aWFsaXplQjIoKSB7XHJcbiAgdHJ5IHtcclxuICAgIGlmIChpc0IySW5pdGlhbGl6ZWQgJiYgYjIgJiYgYnVja2V0SWQgJiYgZG93bmxvYWRVcmwpIHtcclxuICAgICAgY29uc29sZS5sb2coJ+KchSBCMiBhbHJlYWR5IGluaXRpYWxpemVkJyk7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEVudmlyb25tZW50IHZhcmlhYmxlcyBuaSB0ZWtzaGlyaXNoXHJcbiAgICBpZiAoIUJBQ0tCTEFaRV9LRVlfSUQgfHwgIUJBQ0tCTEFaRV9BUFBfS0VZIHx8ICFCVUNLRVRfTkFNRSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0JhY2tibGF6ZSBzb3psYW1hbGFyaSAuZW52LmxvY2FsIGZheWxpZGEgdG9cXCdsaXEgZW1hcycpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnNvbGUubG9nKCfwn5SEIEluaXRpYWxpemluZyBCYWNrYmxhemUgQjIuLi4nKTtcclxuICAgIGNvbnNvbGUubG9nKCdLZXkgSUQ6JywgQkFDS0JMQVpFX0tFWV9JRC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicpO1xyXG4gICAgY29uc29sZS5sb2coJ0J1Y2tldDonLCBCVUNLRVRfTkFNRSk7XHJcblxyXG4gICAgLy8gQjIgY2xpZW50IHlhcmF0aXNoXHJcbiAgICBiMiA9IG5ldyBCMih7XHJcbiAgICAgIGFwcGxpY2F0aW9uS2V5SWQ6IEJBQ0tCTEFaRV9LRVlfSUQsXHJcbiAgICAgIGFwcGxpY2F0aW9uS2V5OiBCQUNLQkxBWkVfQVBQX0tFWSxcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIEF1dG9yaXphdHNpeWFcclxuICAgIGNvbnNvbGUubG9nKCfwn5SQIEF1dGhvcml6aW5nIHdpdGggQmFja2JsYXplLi4uJyk7XHJcbiAgICBjb25zdCBhdXRoUmVzcG9uc2UgPSBhd2FpdCBiMi5hdXRob3JpemUoKTtcclxuXHJcbiAgICBpZiAoIWF1dGhSZXNwb25zZT8uZGF0YSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0F1dGhvcml6YXRpb24gamF2b2IgYm9cXCdzaCcpO1xyXG4gICAgfVxyXG5cclxuICAgIGRvd25sb2FkVXJsID0gYXV0aFJlc3BvbnNlLmRhdGEuZG93bmxvYWRVcmw7XHJcbiAgICBjb25zb2xlLmxvZygn4pyFIEF1dGhvcml6YXRpb24gc3VjY2Vzc2Z1bCcpO1xyXG5cclxuICAgIC8vIEJ1Y2tldCB0b3Bpc2hcclxuICAgIGNvbnNvbGUubG9nKCfwn5eC77iPIEZpbmRpbmcgYnVja2V0Li4uJyk7XHJcbiAgICBjb25zdCBidWNrZXRzUmVzcG9uc2UgPSBhd2FpdCBiMi5saXN0QnVja2V0cygpO1xyXG4gICAgXHJcbiAgICBpZiAoIWJ1Y2tldHNSZXNwb25zZT8uZGF0YT8uYnVja2V0cykge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0J1Y2tldHMgcm9cXCd5eGF0aSBvbGlubWFkaScpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGJ1Y2tldCA9IGJ1Y2tldHNSZXNwb25zZS5kYXRhLmJ1Y2tldHMuZmluZChiID0+IGIuYnVja2V0TmFtZSA9PT0gQlVDS0VUX05BTUUpO1xyXG4gICAgXHJcbiAgICBpZiAoIWJ1Y2tldCkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEJ1Y2tldCBcIiR7QlVDS0VUX05BTUV9XCIgdG9waWxtYWRpLiBNYXZqdWQgYnVja2V0bGFyOiAke2J1Y2tldHNSZXNwb25zZS5kYXRhLmJ1Y2tldHMubWFwKGIgPT4gYi5idWNrZXROYW1lKS5qb2luKCcsICcpfWApO1xyXG4gICAgfVxyXG5cclxuICAgIGJ1Y2tldElkID0gYnVja2V0LmJ1Y2tldElkO1xyXG4gICAgaXNCMkluaXRpYWxpemVkID0gdHJ1ZTtcclxuXHJcbiAgICBjb25zb2xlLmxvZygn4pyFIEJ1Y2tldCB0b3BpbGRpOicsIGJ1Y2tldC5idWNrZXROYW1lKTtcclxuICAgIGNvbnNvbGUubG9nKCfinIUgQnVja2V0IElEOicsIGJ1Y2tldElkKTtcclxuICAgIGNvbnNvbGUubG9nKCfinIUgRG93bmxvYWQgVVJMOicsIGRvd25sb2FkVXJsLnN1YnN0cmluZygwLCAzMCkgKyAnLi4uJyk7XHJcblxyXG4gICAgcmV0dXJuIHRydWU7XHJcblxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCfinYwgQmFja2JsYXplIGluaXRpYWxpemF0aW9uIHhhdG9zaTonKTtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ01lc3NhZ2U6JywgZXJyb3IubWVzc2FnZSk7XHJcbiAgICBjb25zb2xlLmVycm9yKCdTdGF0dXM6JywgZXJyb3IucmVzcG9uc2U/LnN0YXR1cyk7XHJcbiAgICBjb25zb2xlLmVycm9yKCdSZXNwb25zZTonLCBlcnJvci5yZXNwb25zZT8uZGF0YSk7XHJcblxyXG4gICAgLy8gUmVzZXQgcWlsaXNoXHJcbiAgICBiMiA9IG51bGw7XHJcbiAgICBpc0IySW5pdGlhbGl6ZWQgPSBmYWxzZTtcclxuICAgIGJ1Y2tldElkID0gbnVsbDtcclxuICAgIGRvd25sb2FkVXJsID0gbnVsbDtcclxuXHJcbiAgICBpZiAoZXJyb3IucmVzcG9uc2U/LnN0YXR1cyA9PT0gNDAxKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcign4p2MIEJhY2tibGF6ZSBrYWxpdGxhcmkgbm90b1xcJ2dcXCdyaSEgWWFuZ2kgQXBwbGljYXRpb24gS2V5IHlhcmF0aW5nIHZhIHJ1eHNhdGxhcm5pIHRla3NoaXJpbmcuJyk7XHJcbiAgICB9IGVsc2UgaWYgKGVycm9yLnJlc3BvbnNlPy5zdGF0dXMgPT09IDQwMykge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ+KdjCBSdXhzYXQgeW9cXCdxISBBcHBsaWNhdGlvbiBLZXkgZGEgUmVhZC9Xcml0ZSBydXhzYXRsYXJpIGJvci1taSB0ZWtzaGlyaW5nLicpO1xyXG4gICAgfSBlbHNlIGlmIChlcnJvci5jb2RlID09PSAnRU5PVEZPVU5EJykge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ+KdjCBJbnRlcm5ldCB1bGFuaXNoaSBtdWFtbW9zaScpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGDinYwgQmFja2JsYXplIHhhdG9zaTogJHtlcnJvci5tZXNzYWdlfWApO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy8gRmF5bCBub21pbmkgdG96YWxhc2hcclxuZnVuY3Rpb24gc2FuaXRpemVGaWxlbmFtZShmaWxlbmFtZSkge1xyXG4gIHJldHVybiBmaWxlbmFtZVxyXG4gICAgLnJlcGxhY2UoL1teYS16QS1aMC05XFwtX1xcLl0vZywgJ18nKVxyXG4gICAgLnJlcGxhY2UoL197Mix9L2csICdfJylcclxuICAgIC50b0xvd2VyQ2FzZSgpO1xyXG59XHJcblxyXG4vLyBGYXlsbmkgQmFja2JsYXplIGdhIHl1a2xhc2hcclxuYXN5bmMgZnVuY3Rpb24gdXBsb2FkRmlsZVRvQjIoZmlsZVBhdGgsIGZpbGVOYW1lLCBtaW1lVHlwZSkge1xyXG4gIHRyeSB7XHJcbiAgICBpZiAoIWIyIHx8ICFidWNrZXRJZCkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0IyIGlzaGdhIHR1c2hpcmlsbWFnYW4nKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBGYXlsIG1hdmp1ZGxpZ2luaSB0ZWtzaGlyaXNoXHJcbiAgICBpZiAoIWV4aXN0c1N5bmMoZmlsZVBhdGgpKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmF5bCB0b3BpbG1hZGk6ICR7ZmlsZVBhdGh9YCk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc29sZS5sb2coJ/Cfk6QgVXBsb2FkaW5nOicsIGZpbGVOYW1lKTtcclxuICAgIFxyXG4gICAgLy8gRmF5bCBvJ3Fpc2hcclxuICAgIGNvbnN0IGZpbGVCdWZmZXIgPSBhd2FpdCBmcy5yZWFkRmlsZShmaWxlUGF0aCk7XHJcbiAgICBjb25zb2xlLmxvZygn8J+TgSBGaWxlIHNpemU6JywgKGZpbGVCdWZmZXIubGVuZ3RoIC8gMTAyNCAvIDEwMjQpLnRvRml4ZWQoMiksICdNQicpO1xyXG5cclxuICAgIC8vIFVwbG9hZCBVUkwgb2xpc2hcclxuICAgIGNvbnN0IHVwbG9hZFVybFJlc3BvbnNlID0gYXdhaXQgYjIuZ2V0VXBsb2FkVXJsKHsgYnVja2V0SWQgfSk7XHJcbiAgICBcclxuICAgIGlmICghdXBsb2FkVXJsUmVzcG9uc2U/LmRhdGEpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdVcGxvYWQgVVJMIG9saW5tYWRpJyk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRmF5bG5pIHl1a2xhc2hcclxuICAgIGNvbnN0IHVwbG9hZFJlc3BvbnNlID0gYXdhaXQgYjIudXBsb2FkRmlsZSh7XHJcbiAgICAgIHVwbG9hZFVybDogdXBsb2FkVXJsUmVzcG9uc2UuZGF0YS51cGxvYWRVcmwsXHJcbiAgICAgIHVwbG9hZEF1dGhUb2tlbjogdXBsb2FkVXJsUmVzcG9uc2UuZGF0YS5hdXRob3JpemF0aW9uVG9rZW4sXHJcbiAgICAgIGZpbGVOYW1lOiBmaWxlTmFtZSxcclxuICAgICAgZGF0YTogZmlsZUJ1ZmZlcixcclxuICAgICAgY29udGVudFR5cGU6IG1pbWVUeXBlIHx8ICdhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0nLFxyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKCF1cGxvYWRSZXNwb25zZT8uZGF0YSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VwbG9hZCBqYXZvYiBib1xcJ3NoJyk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc29sZS5sb2coJ+KchSBVcGxvYWQgc3VjY2Vzc2Z1bDonLCB1cGxvYWRSZXNwb25zZS5kYXRhLmZpbGVOYW1lKTtcclxuICAgIHJldHVybiB1cGxvYWRSZXNwb25zZS5kYXRhO1xyXG5cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcign4p2MIFVwbG9hZCBlcnJvcjonLCBlcnJvci5tZXNzYWdlKTtcclxuICAgIHRocm93IG5ldyBFcnJvcihgVXBsb2FkIHhhdG9zaTogJHtlcnJvci5tZXNzYWdlfWApO1xyXG4gIH1cclxufVxyXG5cclxuLy8gVW11bWl5IFVSTCB5YXJhdGlzaFxyXG5mdW5jdGlvbiBjcmVhdGVQdWJsaWNVcmwoZmlsZU5hbWUpIHtcclxuICB0cnkge1xyXG4gICAgaWYgKCFkb3dubG9hZFVybCB8fCAhQlVDS0VUX05BTUUpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdEb3dubG9hZCBVUkwgeW9raSBidWNrZXQgbm9taSB5b1xcJ3EnKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgY29uc3QgZW5jb2RlZEZpbGVOYW1lID0gZW5jb2RlVVJJQ29tcG9uZW50KGZpbGVOYW1lKTtcclxuICAgIGNvbnN0IHB1YmxpY1VybCA9IGAke2Rvd25sb2FkVXJsfS9maWxlLyR7QlVDS0VUX05BTUV9LyR7ZW5jb2RlZEZpbGVOYW1lfWA7XHJcbiAgICBcclxuICAgIGNvbnNvbGUubG9nKCfwn5SXIFB1YmxpYyBVUkw6JywgcHVibGljVXJsKTtcclxuICAgIHJldHVybiBwdWJsaWNVcmw7XHJcbiAgICBcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcign4p2MIFVSTCB5YXJhdGlzaCB4YXRvc2k6JywgZXJyb3IubWVzc2FnZSk7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFVSTCB5YXJhdGlzaCB4YXRvc2k6ICR7ZXJyb3IubWVzc2FnZX1gKTtcclxuICB9XHJcbn1cclxuXHJcbi8vIFZhcXRpbmNoYWxpayBmYXlsbmkgbydjaGlyaXNoXHJcbmFzeW5jIGZ1bmN0aW9uIGNsZWFudXBUZW1wRmlsZShmaWxlUGF0aCkge1xyXG4gIHRyeSB7XHJcbiAgICBpZiAoZXhpc3RzU3luYyhmaWxlUGF0aCkpIHtcclxuICAgICAgYXdhaXQgZnMudW5saW5rKGZpbGVQYXRoKTtcclxuICAgICAgY29uc29sZS5sb2coJ/Cfl5HvuI8gVGVtcCBmaWxlIGRlbGV0ZWQ6JywgZmlsZVBhdGgpO1xyXG4gICAgfVxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLndhcm4oJ+KaoO+4jyBUZW1wIGZpbGUgZGVsZXRpb24gd2FybmluZzonLCBlcnJvci5tZXNzYWdlKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XHJcbiAgYXBpOiB7XHJcbiAgICBib2R5UGFyc2VyOiBmYWxzZSxcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xyXG4gIGlmIChyZXEubWV0aG9kICE9PSAnUE9TVCcpIHtcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7IFxyXG4gICAgICBlcnJvcjogXCJGYXFhdCBQT1NUIHNvJ3JvdmxhcmkgcWFidWwgcWlsaW5hZGlcIixcclxuICAgICAgbWV0aG9kOiByZXEubWV0aG9kIFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgY29uc29sZS5sb2coJ/CfmoAgU3RhcnRpbmcgdXBsb2FkIHByb2Nlc3MuLi4nKTtcclxuICAgIFxyXG4gICAgLy8gQmFja2JsYXplIG5pIGlzaGdhIHR1c2hpcmlzaFxyXG4gICAgYXdhaXQgaW5pdGlhbGl6ZUIyKCk7XHJcbiAgICBcclxuICAgIC8vIFZhcXRpbmNoYWxpayBwYXBrYSB5YXJhdGlzaCB2YSB0ZWtzaGlyaXNoXHJcbiAgICBsZXQgdGVtcERpcjtcclxuICAgIHRyeSB7XHJcbiAgICAgIHRlbXBEaXIgPSBvcy50bXBkaXIoKTtcclxuICAgICAgY29uc29sZS5sb2coJ/Cfk4EgVXNpbmcgdGVtcCBkaXJlY3Rvcnk6JywgdGVtcERpcik7XHJcbiAgICAgIFxyXG4gICAgICAvLyBUZW1wIHBhcGthIG1hdmp1ZGxpZ2luaSB0ZWtzaGlyaXNoIHZhIHlhcmF0aXNoXHJcbiAgICAgIGlmICghZXhpc3RzU3luYyh0ZW1wRGlyKSkge1xyXG4gICAgICAgIGF3YWl0IGZzLm1rZGlyKHRlbXBEaXIsIHsgcmVjdXJzaXZlOiB0cnVlIH0pO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCfwn5OBIENyZWF0ZWQgdGVtcCBkaXJlY3Rvcnk6JywgdGVtcERpcik7XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKHRlbXBFcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCfinYwgVGVtcCBkaXJlY3RvcnkgZXJyb3I6JywgdGVtcEVycm9yLm1lc3NhZ2UpO1xyXG4gICAgICAvLyBGYWxsYmFjayAtIGpvcml5IHBhcGthZGEgdGVtcCB5YXJhdGlzaFxyXG4gICAgICB0ZW1wRGlyID0gcGF0aC5qb2luKHByb2Nlc3MuY3dkKCksICd0ZW1wJyk7XHJcbiAgICAgIGlmICghZXhpc3RzU3luYyh0ZW1wRGlyKSkge1xyXG4gICAgICAgIGF3YWl0IGZzLm1rZGlyKHRlbXBEaXIsIHsgcmVjdXJzaXZlOiB0cnVlIH0pO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCfwn5OBIENyZWF0ZWQgZmFsbGJhY2sgdGVtcCBkaXJlY3Rvcnk6JywgdGVtcERpcik7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gRm9ybWlkYWJsZSBzb3psYW1hbGFyaVxyXG4gICAgY29uc3QgZm9ybSA9IGZvcm1pZGFibGUoe1xyXG4gICAgICBtdWx0aXBsZXM6IHRydWUsXHJcbiAgICAgIHVwbG9hZERpcjogdGVtcERpcixcclxuICAgICAga2VlcEV4dGVuc2lvbnM6IHRydWUsXHJcbiAgICAgIGFsbG93RW1wdHlGaWxlczogZmFsc2UsXHJcbiAgICAgIG1pbkZpbGVTaXplOiAxLFxyXG4gICAgICBtYXhGaWxlU2l6ZTogMTAwICogMTAyNCAqIDEwMjQsIC8vIDEwMCBNQiBoYXIgZmF5bCB1Y2h1blxyXG4gICAgICBtYXhGaWxlczogNSxcclxuICAgICAgbWF4VG90YWxGaWxlU2l6ZTogNTAwICogMTAyNCAqIDEwMjQsIC8vIEphbWkgNTAwTUJcclxuICAgICAgbWF4RmllbGRzU2l6ZTogMTAgKiAxMDI0ICogMTAyNCwgLy8gMTBNQiBmaWVsZCBkYXRhXHJcbiAgICAgIGNyZWF0ZURpcnNGcm9tVXBsb2FkczogdHJ1ZSwgLy8gUGFwa2FuaSBhdnRvbWF0aWsgeWFyYXRpc2hcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKCfwn5OLIFBhcnNpbmcgZm9ybSBkYXRhLi4uJyk7XHJcbiAgICBcclxuICAgIGNvbnN0IHsgZmllbGRzLCBmaWxlcyB9ID0gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICBmb3JtLnBhcnNlKHJlcSwgKGVyciwgZmllbGRzLCBmaWxlcykgPT4ge1xyXG4gICAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBGb3JtIHBhcnNpbmcgZXJyb3I6JywgZXJyLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihgRm9ybSBwYXJzaW5nIHhhdG9zaTogJHtlcnIubWVzc2FnZX1gKSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCfinIUgRm9ybSBwYXJzZWQgc3VjY2Vzc2Z1bGx5Jyk7XHJcbiAgICAgICAgICByZXNvbHZlKHsgZmllbGRzLCBmaWxlcyB9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc29sZS5sb2coJ/Cfk4EgRmlsZXMgcmVjZWl2ZWQ6JywgT2JqZWN0LmtleXMoZmlsZXMpKTtcclxuICAgIGNvbnNvbGUubG9nKCfwn5OdIEZpZWxkcyByZWNlaXZlZDonLCBPYmplY3Qua2V5cyhmaWVsZHMpKTtcclxuXHJcbiAgICAvLyBGYXlsIG1hdmp1ZGxpZ2luaSB0ZWtzaGlyaXNoXHJcbiAgICBpZiAoIWZpbGVzLmZpbGUpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgXHJcbiAgICAgICAgZXJyb3I6ICdIZWNoIHFhbmRheSBmYXlsIHl1a2xhbm1hZGknLFxyXG4gICAgICAgIHJlY2VpdmVkOiBPYmplY3Qua2V5cyhmaWxlcylcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdXBsb2FkZWRGaWxlcyA9IEFycmF5LmlzQXJyYXkoZmlsZXMuZmlsZSkgPyBmaWxlcy5maWxlIDogW2ZpbGVzLmZpbGVdO1xyXG4gICAgXHJcbiAgICAvLyBGYXlsbGFyIHNvbmluaSB0ZWtzaGlyaXNoXHJcbiAgICBpZiAodXBsb2FkZWRGaWxlcy5sZW5ndGggPiA1KSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IFxyXG4gICAgICAgIGVycm9yOiAnTWFrc2ltYWwgNSB0YSBmYXlsIHl1a2xhc2ggbXVta2luJyxcclxuICAgICAgICByZWNlaXZlZDogdXBsb2FkZWRGaWxlcy5sZW5ndGggXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEphbWkgaGFqbW5pIHRla3NoaXJpc2hcclxuICAgIGNvbnN0IHRvdGFsU2l6ZSA9IHVwbG9hZGVkRmlsZXMucmVkdWNlKChzdW0sIGZpbGUpID0+IHN1bSArIChmaWxlLnNpemUgfHwgMCksIDApO1xyXG4gICAgaWYgKHRvdGFsU2l6ZSA+IDUwMCAqIDEwMjQgKiAxMDI0KSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IFxyXG4gICAgICAgIGVycm9yOiAnSmFtaSBmYXlsbGFyIGhham1pIDUwME1CIGRhbiBvc2htYXNpbicsXHJcbiAgICAgICAgdG90YWxTaXplOiBgJHsodG90YWxTaXplIC8gMTAyNCAvIDEwMjQpLnRvRml4ZWQoMil9TUJgXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEZpZWxkcyBuaSBvbGlzaFxyXG4gICAgY29uc3QgdHlwZSA9IEFycmF5LmlzQXJyYXkoZmllbGRzLnR5cGUpID8gZmllbGRzLnR5cGVbMF0gOiAoZmllbGRzLnR5cGUgfHwgJ3Bvc3QnKTtcclxuICAgIGNvbnN0IHVzZXJuYW1lID0gQXJyYXkuaXNBcnJheShmaWVsZHMudXNlcm5hbWUpID8gZmllbGRzLnVzZXJuYW1lWzBdIDogZmllbGRzLnVzZXJuYW1lO1xyXG4gICAgY29uc3QgcG9zdEluZGV4ID0gQXJyYXkuaXNBcnJheShmaWVsZHMucG9zdEluZGV4KSA/IGZpZWxkcy5wb3N0SW5kZXhbMF0gOiBmaWVsZHMucG9zdEluZGV4O1xyXG5cclxuICAgIGlmICghdXNlcm5hbWUpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgXHJcbiAgICAgICAgZXJyb3I6ICdVc2VybmFtZSBtYWpidXJpeScsXHJcbiAgICAgICAgZmllbGRzOiBPYmplY3Qua2V5cyhmaWVsZHMpXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnNvbGUubG9nKGDwn5OKIFVwbG9hZCBzZXNzaW9uOiB0eXBlPSR7dHlwZX0sIHVzZXJuYW1lPSR7dXNlcm5hbWV9LCBmaWxlcz0ke3VwbG9hZGVkRmlsZXMubGVuZ3RofWApO1xyXG5cclxuICAgIGNvbnN0IHJlc3VsdHMgPSBbXTtcclxuICAgIGNvbnN0IGVycm9ycyA9IFtdO1xyXG5cclxuICAgIC8vIEhhciBiaXIgZmF5bG5pIHl1a2xhc2hcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdXBsb2FkZWRGaWxlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBjb25zdCBmaWxlID0gdXBsb2FkZWRGaWxlc1tpXTtcclxuICAgICAgbGV0IHRlbXBGaWxlUGF0aCA9IG51bGw7XHJcbiAgICAgIFxyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IG9yaWdpbmFsTmFtZSA9IGZpbGUub3JpZ2luYWxGaWxlbmFtZSB8fCBgZmlsZV8ke2kgKyAxfWA7XHJcbiAgICAgICAgY29uc3QgbWltZVR5cGUgPSBmaWxlLm1pbWV0eXBlIHx8ICdhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0nO1xyXG4gICAgICAgIGNvbnN0IGZpbGVTaXplID0gZmlsZS5zaXplIHx8IDA7XHJcbiAgICAgICAgdGVtcEZpbGVQYXRoID0gZmlsZS5maWxlcGF0aDtcclxuXHJcbiAgICAgICAgY29uc29sZS5sb2coYPCfk6QgUHJvY2Vzc2luZyAke2kgKyAxfS8ke3VwbG9hZGVkRmlsZXMubGVuZ3RofTogJHtvcmlnaW5hbE5hbWV9YCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coYPCfk4ogU2l6ZTogJHsoZmlsZVNpemUgLyAxMDI0IC8gMTAyNCkudG9GaXhlZCgyKX1NQiwgVHlwZTogJHttaW1lVHlwZX1gKTtcclxuXHJcbiAgICAgICAgLy8gRmF5bCBoYWptaW5pIHRla3NoaXJpc2hcclxuICAgICAgICBpZiAoZmlsZVNpemUgPiAxMDAgKiAxMDI0ICogMTAyNCkge1xyXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYXlsIGhham1pIDEwME1CIGRhbiBrYXR0YTogJHsoZmlsZVNpemUgLyAxMDI0IC8gMTAyNCkudG9GaXhlZCgyKX1NQmApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGZpbGVTaXplID09PSAwKSB7XHJcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0JvXFwnc2ggZmF5bCcpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gRmF5bCBtYXZqdWRsaWdpbmkgdGVrc2hpcmlzaFxyXG4gICAgICAgIGlmICghZXhpc3RzU3luYyh0ZW1wRmlsZVBhdGgpKSB7XHJcbiAgICAgICAgICAvLyBBZ2FyIGZheWwgeW8ncSBibydsc2EsIGJpcm96IGt1dGliIHFheXRhIHRla3NoaXJpc2hcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCfij7MgRmlsZSBub3QgZm91bmQsIHdhaXRpbmcgMSBzZWNvbmQuLi4nKTtcclxuICAgICAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCAxMDAwKSk7XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIGlmICghZXhpc3RzU3luYyh0ZW1wRmlsZVBhdGgpKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVmFxdGluY2hhbGlrIGZheWwgdG9waWxtYWRpOiAke3RlbXBGaWxlUGF0aH1gKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIEZheWwgaGFqbWluaSBvbGlzaCB2YSB0ZWtzaGlyaXNoXHJcbiAgICAgICAgY29uc3QgZmlsZVN0YXRzID0gYXdhaXQgZnMuc3RhdCh0ZW1wRmlsZVBhdGgpO1xyXG4gICAgICAgIGNvbnN0IGFjdHVhbEZpbGVTaXplID0gZmlsZVN0YXRzLnNpemU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc29sZS5sb2coYPCfk4ogRmlsZSBzdGF0czogcmVwb3J0ZWQ9JHtmaWxlU2l6ZX0sIGFjdHVhbD0ke2FjdHVhbEZpbGVTaXplfWApO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmIChhY3R1YWxGaWxlU2l6ZSA9PT0gMCkge1xyXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdCb1xcJ3NoIGZheWwnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFJlcG9ydGVkIHZhIGFjdHVhbCBzaXplIGZhcnFpbmkgdGVrc2hpcmlzaFxyXG4gICAgICAgIGlmIChmaWxlU2l6ZSA+IDAgJiYgTWF0aC5hYnMoZmlsZVNpemUgLSBhY3R1YWxGaWxlU2l6ZSkgPiAxMDAwKSB7XHJcbiAgICAgICAgICBjb25zb2xlLndhcm4oYOKaoO+4jyBGaWxlIHNpemUgbWlzbWF0Y2g6IHJlcG9ydGVkPSR7ZmlsZVNpemV9LCBhY3R1YWw9JHthY3R1YWxGaWxlU2l6ZX1gKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIEZheWwgbm9taW5pIHlhcmF0aXNoXHJcbiAgICAgICAgY29uc3Qgc2FmZU9yaWdpbmFsTmFtZSA9IHNhbml0aXplRmlsZW5hbWUob3JpZ2luYWxOYW1lKTtcclxuICAgICAgICBjb25zdCBmaWxlRXh0ZW5zaW9uID0gcGF0aC5leHRuYW1lKHNhZmVPcmlnaW5hbE5hbWUpIHx8ICcnO1xyXG4gICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IERhdGUubm93KCk7XHJcbiAgICAgICAgY29uc3QgcmFuZG9tSWQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwgOCk7XHJcblxyXG4gICAgICAgIGxldCBmaWxlTmFtZTtcclxuICAgICAgICBpZiAodHlwZSA9PT0gJ3Byb2ZpbGUnKSB7XHJcbiAgICAgICAgICBmaWxlTmFtZSA9IGBwcm9maWxlcy8ke3VzZXJuYW1lfV8ke3RpbWVzdGFtcH1fJHtyYW5kb21JZH0ke2ZpbGVFeHRlbnNpb259YDtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY29uc3QgcG9zdFN1ZmZpeCA9IHBvc3RJbmRleCA/IGBfcG9zdCR7cG9zdEluZGV4fWAgOiAnJztcclxuICAgICAgICAgIGNvbnN0IGZpbGVTdWZmaXggPSB1cGxvYWRlZEZpbGVzLmxlbmd0aCA+IDEgPyBgXyR7aSArIDF9YCA6ICcnO1xyXG4gICAgICAgICAgZmlsZU5hbWUgPSBgcG9zdHMvJHt1c2VybmFtZX0ke3Bvc3RTdWZmaXh9JHtmaWxlU3VmZml4fV8ke3RpbWVzdGFtcH1fJHtyYW5kb21JZH0ke2ZpbGVFeHRlbnNpb259YDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKGDwn46vIERlc3RpbmF0aW9uOiAke2ZpbGVOYW1lfWApO1xyXG5cclxuICAgICAgICAvLyBGYXlsbmkgeXVrbGFzaFxyXG4gICAgICAgIGNvbnN0IHVwbG9hZFJlc3VsdCA9IGF3YWl0IHVwbG9hZEZpbGVUb0IyKHRlbXBGaWxlUGF0aCwgZmlsZU5hbWUsIG1pbWVUeXBlKTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBVbXVtaXkgVVJMIHlhcmF0aXNoXHJcbiAgICAgICAgY29uc3QgcHVibGljVXJsID0gY3JlYXRlUHVibGljVXJsKGZpbGVOYW1lKTtcclxuXHJcbiAgICAgICAgcmVzdWx0cy5wdXNoKHtcclxuICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgICAgICB1cmw6IHB1YmxpY1VybCxcclxuICAgICAgICAgIGZpbGVuYW1lOiB1cGxvYWRSZXN1bHQuZmlsZU5hbWUsXHJcbiAgICAgICAgICBvcmlnaW5hbE5hbWU6IG9yaWdpbmFsTmFtZSxcclxuICAgICAgICAgIGZpbGVTaXplOiBmaWxlU2l6ZSxcclxuICAgICAgICAgIG1pbWVUeXBlOiBtaW1lVHlwZSxcclxuICAgICAgICAgIGJ1Y2tldDogQlVDS0VUX05BTUUsXHJcbiAgICAgICAgICB0eXBlOiB0eXBlLFxyXG4gICAgICAgICAgZmlsZUluZGV4OiBpICsgMSxcclxuICAgICAgICAgIHRvdGFsRmlsZXM6IHVwbG9hZGVkRmlsZXMubGVuZ3RoLFxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBjb25zb2xlLmxvZyhg4pyFIFN1Y2Nlc3MgJHtpICsgMX0vJHt1cGxvYWRlZEZpbGVzLmxlbmd0aH06ICR7b3JpZ2luYWxOYW1lfWApO1xyXG5cclxuICAgICAgfSBjYXRjaCAoZmlsZUVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihg4p2MIEZpbGUgZXJyb3IgJHtpICsgMX0vJHt1cGxvYWRlZEZpbGVzLmxlbmd0aH06YCwgZmlsZUVycm9yLm1lc3NhZ2UpO1xyXG4gICAgICAgIGVycm9ycy5wdXNoKHsgXHJcbiAgICAgICAgICBmaWxlbmFtZTogZmlsZS5vcmlnaW5hbEZpbGVuYW1lIHx8IGBmaWxlXyR7aSArIDF9YCwgXHJcbiAgICAgICAgICBlcnJvcjogZmlsZUVycm9yLm1lc3NhZ2UsXHJcbiAgICAgICAgICBmaWxlSW5kZXg6IGkgKyAxIFxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9IGZpbmFsbHkge1xyXG4gICAgICAgIC8vIFZhcXRpbmNoYWxpayBmYXlsbmkgbydjaGlyaXNoXHJcbiAgICAgICAgaWYgKHRlbXBGaWxlUGF0aCkge1xyXG4gICAgICAgICAgYXdhaXQgY2xlYW51cFRlbXBGaWxlKHRlbXBGaWxlUGF0aCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gTmF0aWphXHJcbiAgICBjb25zdCByZXNwb25zZSA9IHtcclxuICAgICAgc3VjY2VzczogZXJyb3JzLmxlbmd0aCA9PT0gMCxcclxuICAgICAgdXBsb2FkZWQ6IHJlc3VsdHMsXHJcbiAgICAgIGVycm9yczogZXJyb3JzLFxyXG4gICAgICBzdW1tYXJ5OiB7XHJcbiAgICAgICAgdG90YWxGaWxlczogdXBsb2FkZWRGaWxlcy5sZW5ndGgsXHJcbiAgICAgICAgc3VjY2Vzc2Z1bDogcmVzdWx0cy5sZW5ndGgsXHJcbiAgICAgICAgZmFpbGVkOiBlcnJvcnMubGVuZ3RoLFxyXG4gICAgICAgIHRvdGFsU2l6ZTogYCR7KHRvdGFsU2l6ZSAvIDEwMjQgLyAxMDI0KS50b0ZpeGVkKDIpfU1CYCxcclxuICAgICAgfSxcclxuICAgIH07XHJcblxyXG4gICAgY29uc29sZS5sb2coJ/CfjokgVXBsb2FkIGNvbXBsZXRlOicsIHJlc3BvbnNlLnN1bW1hcnkpO1xyXG5cclxuICAgIGNvbnN0IHN0YXR1c0NvZGUgPSBlcnJvcnMubGVuZ3RoID09PSAwID8gMjAwIDogKHJlc3VsdHMubGVuZ3RoID4gMCA/IDIwNyA6IDQwMCk7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyhzdGF0dXNDb2RlKS5qc29uKHJlc3BvbnNlKTtcclxuXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBHbG9iYWwgZXJyb3I6JywgZXJyb3IubWVzc2FnZSk7XHJcbiAgICBjb25zb2xlLmVycm9yKCdTdGFjazonLCBlcnJvci5zdGFjayk7XHJcbiAgICBcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IFxyXG4gICAgICBlcnJvcjogJ1NlcnZlciB4YXRvbGlnaScsIFxyXG4gICAgICBkZXRhaWxzOiBlcnJvci5tZXNzYWdlLFxyXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxyXG4gICAgfSk7XHJcbiAgfVxyXG59Il0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsImZvcm1pZGFibGUiLCJmcyIsImV4aXN0c1N5bmMiLCJwYXRoIiwib3MiLCJCMiIsIlNVUEFCQVNFX1VSTCIsIlNVUEFCQVNFX0FOT05fS0VZIiwiQkFDS0JMQVpFX0tFWV9JRCIsInByb2Nlc3MiLCJlbnYiLCJCQUNLQkxBWkVfQVBQX0tFWSIsIkJVQ0tFVF9OQU1FIiwic3VwYWJhc2VDbGllbnQiLCJiMiIsImlzQjJJbml0aWFsaXplZCIsImJ1Y2tldElkIiwiZG93bmxvYWRVcmwiLCJpbml0aWFsaXplQjIiLCJjb25zb2xlIiwibG9nIiwiRXJyb3IiLCJzdWJzdHJpbmciLCJhcHBsaWNhdGlvbktleUlkIiwiYXBwbGljYXRpb25LZXkiLCJhdXRoUmVzcG9uc2UiLCJhdXRob3JpemUiLCJkYXRhIiwiYnVja2V0c1Jlc3BvbnNlIiwibGlzdEJ1Y2tldHMiLCJidWNrZXRzIiwiYnVja2V0IiwiZmluZCIsImIiLCJidWNrZXROYW1lIiwibWFwIiwiam9pbiIsImVycm9yIiwibWVzc2FnZSIsInJlc3BvbnNlIiwic3RhdHVzIiwiY29kZSIsInNhbml0aXplRmlsZW5hbWUiLCJmaWxlbmFtZSIsInJlcGxhY2UiLCJ0b0xvd2VyQ2FzZSIsInVwbG9hZEZpbGVUb0IyIiwiZmlsZVBhdGgiLCJmaWxlTmFtZSIsIm1pbWVUeXBlIiwiZmlsZUJ1ZmZlciIsInJlYWRGaWxlIiwibGVuZ3RoIiwidG9GaXhlZCIsInVwbG9hZFVybFJlc3BvbnNlIiwiZ2V0VXBsb2FkVXJsIiwidXBsb2FkUmVzcG9uc2UiLCJ1cGxvYWRGaWxlIiwidXBsb2FkVXJsIiwidXBsb2FkQXV0aFRva2VuIiwiYXV0aG9yaXphdGlvblRva2VuIiwiY29udGVudFR5cGUiLCJjcmVhdGVQdWJsaWNVcmwiLCJlbmNvZGVkRmlsZU5hbWUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJwdWJsaWNVcmwiLCJjbGVhbnVwVGVtcEZpbGUiLCJ1bmxpbmsiLCJ3YXJuIiwiY29uZmlnIiwiYXBpIiwiYm9keVBhcnNlciIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJqc29uIiwidGVtcERpciIsInRtcGRpciIsIm1rZGlyIiwicmVjdXJzaXZlIiwidGVtcEVycm9yIiwiY3dkIiwiZm9ybSIsIm11bHRpcGxlcyIsInVwbG9hZERpciIsImtlZXBFeHRlbnNpb25zIiwiYWxsb3dFbXB0eUZpbGVzIiwibWluRmlsZVNpemUiLCJtYXhGaWxlU2l6ZSIsIm1heEZpbGVzIiwibWF4VG90YWxGaWxlU2l6ZSIsIm1heEZpZWxkc1NpemUiLCJjcmVhdGVEaXJzRnJvbVVwbG9hZHMiLCJmaWVsZHMiLCJmaWxlcyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwicGFyc2UiLCJlcnIiLCJPYmplY3QiLCJrZXlzIiwiZmlsZSIsInJlY2VpdmVkIiwidXBsb2FkZWRGaWxlcyIsIkFycmF5IiwiaXNBcnJheSIsInRvdGFsU2l6ZSIsInJlZHVjZSIsInN1bSIsInNpemUiLCJ0eXBlIiwidXNlcm5hbWUiLCJwb3N0SW5kZXgiLCJyZXN1bHRzIiwiZXJyb3JzIiwiaSIsInRlbXBGaWxlUGF0aCIsIm9yaWdpbmFsTmFtZSIsIm9yaWdpbmFsRmlsZW5hbWUiLCJtaW1ldHlwZSIsImZpbGVTaXplIiwiZmlsZXBhdGgiLCJzZXRUaW1lb3V0IiwiZmlsZVN0YXRzIiwic3RhdCIsImFjdHVhbEZpbGVTaXplIiwiTWF0aCIsImFicyIsInNhZmVPcmlnaW5hbE5hbWUiLCJmaWxlRXh0ZW5zaW9uIiwiZXh0bmFtZSIsInRpbWVzdGFtcCIsIkRhdGUiLCJub3ciLCJyYW5kb21JZCIsInJhbmRvbSIsInRvU3RyaW5nIiwicG9zdFN1ZmZpeCIsImZpbGVTdWZmaXgiLCJ1cGxvYWRSZXN1bHQiLCJwdXNoIiwic3VjY2VzcyIsInVybCIsImZpbGVJbmRleCIsInRvdGFsRmlsZXMiLCJmaWxlRXJyb3IiLCJ1cGxvYWRlZCIsInN1bW1hcnkiLCJzdWNjZXNzZnVsIiwiZmFpbGVkIiwic3RhdHVzQ29kZSIsInN0YWNrIiwiZGV0YWlscyIsInRvSVNPU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/upload.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();